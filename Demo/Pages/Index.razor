@page "/"

@using VxFormGenerator
@using FormGeneratorDemo.Data
@using System.Dynamic

<h1>Formgenerator Playground!</h1>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Generated by POCO</h5>
        <EditForm Model="poco" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <RenderFormElements></RenderFormElements>
            <button class="btn btn-primary" type="submit">Submit</button>
        </EditForm>
    </div>
</div>
<hr />
<div class="card">
    <div class="card-body">
        <h5 class="card-title">Generated by dynamic ExpandoObject</h5>

        <EditForm Model="session" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleValidSubmit">
            <RenderFormElements></RenderFormElements>
     
            <button type="submit">Submit</button>
        </EditForm>
    </div>
</div>



<label>@session.Note</label>

@code{

    /// <summary>
    /// Model that is used for the form
    /// </summary>
    private FeedingSession poco = new FeedingSession();
    private dynamic session;


    protected override void OnInitialized()
    {
        var o = new ExpandoObject();
        ((IDictionary<String, Object>)o).Add("Name", "add");
        ((IDictionary<String, Object>)o).Add("Note", "Blaaat");
        ((IDictionary<String, Object>)o).Add("Date", DateTime.Now);
        ((IDictionary<String, Object>)o).Add("Amount", 1);
        session = o;

    }

    /// <summary>
    /// Will handle the submit action of the form
    /// </summary>
    /// <param name="context">The model with values as entered in the form</param>
    private void HandleValidSubmit(EditContext context)
    {
        // save your changes
    }

    private void MyValueChangeHandler(ValueReference<string, bool> selection)
    {
        selection.Value = !selection.Value;

    }

}
